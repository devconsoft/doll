#!/bin/bash
set -eu

CONF_DIR="$(cd "$(dirname "$0")/../conf" && pwd)"
CONF_FILE="${CONF_DIR}/doll.cfg"

# shellcheck source=../conf/doll.cfg
source "${CONF_FILE}"

usage() {
	echo " doll factfilter <fact> <legal value1> <legal value2> <...>"
	echo
	echo " filter for dolls where given <fact>'s value"
	echo " equals given legal value(s)"
	exit 1
}

# see http://stackoverflow.com/questions/3685970/check-if-an-array-contains-a-value
rest_contains_first_element () {
	local e
	for e in "${@:2}"
	do
		[[ "$e" == "$1" ]] && return 0
	done
	return 1
}


[ $# -lt 2 ] && usage

FACT=$1
CMD="${PUPPET_PATH:-}facter ${FACT}"
PAR=3
DOLLFILE=${CONF_DIR}/${DOLLFILE}

shift # we only want to keep the list of legal values

TMPDIR=$(mktemp -d)

[ -s "${DOLLFILE}" ] && {
	parallel-ssh \
		--hosts="${DOLLFILE}" \
		-l "${REMOTEUSER}" \
		-p "${PAR}" \
		-O ConnectTimeout="${CONNECTION_TIMEOUT}" \
		-t "${CMD_TIMEOUT}" \
		-o "${TMPDIR}" \
		-P "${CMD}"

	doll clear

	for HOST in "${TMPDIR}"/*
	do
		ACTUAL=$(cat "${TMPDIR}/${HOST}")
		if rest_contains_first_element "${ACTUAL}" "$@" # note there has been a shift
		then
			echo ${HOST} >> "${DOLLFILE}"
		fi
	done
}

echo
doll unique

#rm -rf ${TMPDIR}
